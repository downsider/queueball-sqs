parameters:
    sqsRegion: ""

    # SQS has a max filesize limit of 256kb, if it's bigger than that, we want to store the file in S3 and fetch it
    # from there instead
    sizeThreshold: 262144
    storageBucket: ""
    storageRegion: ""
    storagePrefix: ""

services:
    sqsClient:
        class: Aws\Sqs\SqsClient
        arguments:
            -
                version: "2012-11-05"
                region: "%sqsRegion%"

    messageFactory:
        class: Lexide\QueueBall\Sqs\MessageFactory
        arguments:
          - "@middlewareGroup"

    abstractSqsQueue:
        abstract: true
        class: Lexide\QueueBall\Sqs\Queue
        arguments:
            - "@sqsClient"
            - "@messageFactory"
            - "@middlewareGroup"

    middlewareGroup:
        class: Lexide\QueueBall\Sqs\Middleware\MiddlewareGroup
        arguments:
          -
            - "@jsonMiddleware"
            - "@largeFileMiddleware"

    jsonMiddleware:
        class: Lexide\QueueBall\Sqs\Middleware\JsonMiddleware

    largeFileMiddleware:
        class: Lexide\QueueBall\Sqs\Middleware\LargeFileMiddleware
        arguments:
          - "@s3Client"
          - "%storageBucket%"
          - "%storagePrefix%"
          - "%sizeThreshold%"

    s3Client:
        class: Aws\S3\S3Client
        arguments:
          - version: "latest"
            region: "%storageRegion%"

    sqsQueue:
        extends: "abstractSqsQueue"

    # set the sqs queue to be default
    lexide_queueball.defaultQueue:
        aliasOf: "@sqsQueue"

